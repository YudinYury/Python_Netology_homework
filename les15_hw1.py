'''lesson_1_5 homework
Имеется группа студентов, у каждого из которых есть следующие характеристики: имя, фамилия, пол, предыдущий опыт в
программировании (бинарная переменная), 5 оцененных по 10-бальной шкале домашних работ, оценка за экзамен по 10-балльной шкале.
Необходимо написать программу, которая в зависимости от запроса пользователя будет выводить:
обратить внимание:
- чтобы отрабатывалась ситуация с полными тезками отличниками
- не должно быть дублирования кода (и цикла) - использовать одну функцию при разнице в одном параментре в данных
'''
#TODO 1:
# среднюю оценку за домашние задания и за экзамен по всем группе в следующем виде:
#         Средняя оценка за домашние задания по группе: X
#         Средняя оценка за экзамен: Y
# где X и Y - вычисляемые значения;

#TODO 2:
# среднеюю оценку за домашние задания и за экзамен по группе в разрезе: а)пола б)наличия опыта в виде:
#         Средняя оценка за домашние задания у мужчин: A
#         Средняя оценка за экзамен у мужчин: B
#         Средняя оценка за домашние задания у женщин: C
#         Средняя оценка за экзамен у женщин: D
#
#         Средняя оценка за домашние задания у студентов с опытом: E
#         Средняя оценка за экзамен у студентов с опытом: F
#         Средняя оценка за домашние задания у студентов без опыта: G
#         Средняя оценка за экзамен у студентов без опыта: H
# где A, B, C, D, E, F, G, H - вычисляемые значения;

#TODO 3:
# определять лучшего студента, у которого будет максимальный балл по формуле 0.6 * его средняя оценка за домашние задания + 0.4 * оценка за экзамен в виде:
# Лучший студент: S с интегральной оценкой Z
# если студент один или:
# Лучшие студенты: S... с интегральной оценкой Z
# если студентов несколько, где S - имя/имена студентов, Z - вычисляемое значение.
# Студентов должно быть не менее 6.
# Код должен быть грамотно декомпозирован (максимально используйте функции).

import copy
import math

group = [
    {'name':'Tony',  'family':'Moore', 'gender':'m', 'experience':False, 'homework':[9,9,10,10,9], 'exam':9},
    {'name':'Kevin', 'family':'Brown', 'gender':'m', 'experience':False, 'homework': [6,7,8,9,10], 'exam':9},
    {'name':'Rayan', 'family':'Evans', 'gender':'m', 'experience':False, 'homework': [7,7,6,9,8], 'exam':8},
    {'name':'Alex',  'family':'Wilson', 'gender':'f','experience':True, 'homework': [10,10,9,10,10], 'exam':10},
    {'name':'Mary',  'family':'Hall', 'gender':'f',  'experience':False, 'homework': [6,5,6,8,7], 'exam':7},
    {'name':'Juri',  'family':'Judi', 'gender':'m',  'experience':True, 'homework': [10,9,10,8,10], 'exam':10},
    {'name':'Aaron', 'family':'Harris', 'gender':'m','experience':False, 'homework': [6,5,6,5,7], 'exam':6},
    {'name':'Ameli', 'family':'Moore', 'gender':'f', 'experience':False, 'homework': [6,7,9,8,9], 'exam':8},
    {'name':'Juri',  'family':'Judi', 'gender':'m',  'experience':False, 'homework': [8,10,10,9,10], 'exam':10},
]
#############################################################################################################
def get_exam_average_rating(gr):
    # print('get_exam_average_rating')
    aver_exam=0
    summ_exam=0
    rt=0
    for person in gr:
        # print(person)
        summ_exam+=int(person['exam'])
        rt += 1
    aver_exam=summ_exam/rt
    # print('rates=', rt, '   summ=', summ_exam,'   aver=', aver_exam)
    return aver_exam
#############################################################################################################
def get_group_average_rating(gr):
    # print('get_group_average_rating')
    aver_rt=0
    sum_rt=0
    rt=0 # буду считать количество оценок
    for person in gr:
        # print(person)
        for i in person['homework']:
            sum_rt+=int(i)
            rt += 1
        # print(rt)

    aver_rt=sum_rt/rt
    # print('rates=', rt, '   summ=', sum_rt,'   aver=', aver_rt)
    return aver_rt

#############################################################################################################

def main():
    av_rt=get_group_average_rating(group)
    print('Средняя оценка за домашние задания по группе: {0}'.format(av_rt))
    ex_rt=get_exam_average_rating(group)
    print('Средняя оценка за экзамен: {0}'.format(ex_rt))


#############################################################################################################

main()

